# Be sure to restart your web server when you modify this file.

# Uncomment below to force Rails into production mode when 
# you don't control web/app server and can't set it the proper way
# ENV['RAILS_ENV'] ||= 'production'

# Specifies gem version of Rails to use when vendor/rails is not present
RAILS_GEM_VERSION = '2.3.5' unless defined? RAILS_GEM_VERSION

# Bootstrap the Rails environment, frameworks, and default configuration
require File.join(File.dirname(__FILE__), 'boot')

Rails::Initializer.run do |config|
  # Settings in config/environments/* take precedence over those specified here
  
  # Skip frameworks you're not going to use (only works if using vendor/rails)
  # config.frameworks -= [ :action_web_service, :action_mailer ]

  # Only load the plugins named here, by default all plugins in vendor/plugins are loaded
  # config.plugins = %W( exception_notification ssl_requirement )

  # Add additional load paths for your own custom dirs
  # config.load_paths += %W( #{RAILS_ROOT}/extras )

  # Force all environments to use the same logger level 
  # (by default production uses :info, the others :debug)
  # config.log_level = :debug

  # Use the database for sessions instead of the file system
  # (create the session table with 'rake db:sessions:create')
  config.action_controller.session_store = :active_record_store

  # Use SQL instead of Active Record's schema dumper when creating the test database.
  # This is necessary if your schema can't be completely dumped by the schema dumper, 
  # like if you have constraints or database-specific column types
  # config.active_record.schema_format = :sql

  # Activate observers that should always be running
  # config.active_record.observers = :cacher, :garbage_collector

  # Make Active Record use UTC-base instead of local time
  config.time_zone = 'UTC'
  
  # Setting locales
  config.i18n.default_locale = 'en'

  # See Rails::Configuration for more options

  # -------------
  # Required gems
  # -------------
  config.gem "haml"
  config.gem "tmail"
  config.gem "rdiscount", :lib => "rdiscount"

  # NOTES on rspec: if you wan to test with rspec, you have to install
  # rspec yourself, just call: [sudo] gem install rspec-rails

end

# Add new inflection rules using the following format 
# (all these examples are active by default):
# Inflector.inflections do |inflect|
#   inflect.plural /^(ox)$/i, '\1en'
#   inflect.singular /^(ox)en/i, '\1'
#   inflect.irregular 'person', 'people'
#   inflect.uncountable %w( fish sheep )
# end

# Add new mime types for use in respond_to blocks:
# Mime::Type.register "text/richtext", :rtf
# Mime::Type.register "application/x-mobile", :mobile

# Include your application configuration below

# If you want to manage graders through web interface, set the path to
# the grader directory below.  This dir is where raw, ev, ev-exam,
# scripts reside.  All grader scripts will be in
# #{GRADER_ROOT_DIR}/scripts.  
GRADER_ROOT_DIR = ''

# These are where inputs and outputs of test requests are stored
TEST_REQUEST_INPUT_FILE_DIR = RAILS_ROOT + '/data/test_request/input'
TEST_REQUEST_OUTPUT_FILE_DIR = RAILS_ROOT + '/data/test_request/output'

# To use ANALYSIS MODE, provide the testcases/testruns breakdown,
# and the directory of the grading result (usually in judge's dir).
TASK_GRADING_INFO_FILENAME = RAILS_ROOT + '/config/tasks.yml'

# TODO: change this to where results are kept.
GRADING_RESULT_DIR = 'RESULT-DIR'

# Change this to allow importing testdata into database as test-pairs.
# This is mainly for Code Jom contest.
ALLOW_TEST_PAIR_IMPORT = true

# Uncomment so that the system validates user e-mails
# VALIDATE_USER_EMAILS = true

# Uncomment so that Apache X-Sendfile is used when delivering files
# (e.g., in /tasks/view).
# USE_APACHE_XSENDFILE = true

# Uncomment so that configuration is read only once when the server is loaded
# Configuration.enable_caching

# OPTIONS FOR CODE JOM
# --------------------
CODEJOM_MAX_ALIVE_LEVEL = 10
TEST_ASSIGNMENT_EXPIRATION_DURATION = 5.minute
SHOW_CONTEST_STATUS = false
HIDE_PASSED_TASKS = true